<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/aop
        http://www.springframework.org/schema/aop/spring-aop.xsd
        http://www.springframework.org/schema/tx
        http://www.springframework.org/schema/tx/spring-tx.xsd">

	<bean id="baseDataSource" class="com.alibaba.druid.pool.DruidDataSource"
		destroy-method="close" lazy-init="false">
		<property name="driverClassName" value="${database.base.driverClass}" />
		<property name="url" value="${database.base.url}" />
		<property name="password" value="${database.base.password}" />
		<property name="username" value="${database.base.username}" />
		<property name="initialSize" value="${database.initialSize}" />
		<property name="maxActive" value="${database.maxActive}" />
	</bean>

	<bean id="baseSqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="baseDataSource" />
		<property name="configLocation" value="classpath:mybatis/base/config-base.xml" />
	</bean>

	<bean id="baseTransactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="baseDataSource" />
	</bean>

	<bean id="baseSqlSessionTemplate" class="org.mybatis.spring.SqlSessionTemplate">
		<constructor-arg ref="baseSqlSessionFactory" />
	</bean>

	<tx:annotation-driven transaction-manager="baseTransactionManager" />


	<bean id="businessDataSource" class="com.alibaba.druid.pool.DruidDataSource"
		destroy-method="close" lazy-init="false">
		<property name="driverClassName" value="${database.business.driverClass}" />
		<property name="url" value="${database.business.url}" />
		<property name="password" value="${database.business.password}" />
		<property name="username" value="${database.business.username}" />
		<property name="initialSize" value="${database.initialSize}" />
		<property name="maxActive" value="${database.maxActive}" />
	</bean>

	<bean id="businessSqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="businessDataSource" />
		<property name="configLocation"
			value="classpath:mybatis/business/config-business.xml" />
	</bean>

	<bean id="businessTransactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="businessDataSource" />
	</bean>

	<bean id="businessSqlSessionTemplate" class="org.mybatis.spring.SqlSessionTemplate">
		<constructor-arg ref="businessSqlSessionFactory" />
	</bean>

	<tx:annotation-driven transaction-manager="businessTransactionManager" />

	<!-- <bean id="initRedis" class="com.yunva.pay.redis.service.impl.RedisCommonServiceImpl" 
		/> -->
	<!-- 事务管理 -->

	<!--<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer"> -->
	<!--<property name="sqlSessionFactoryBeanName" value="baseSqlSessionFactory" 
		/> -->
	<!--<property name="basePackage" -->
	<!--value="com.yunva.admin.base.mapper;" /> -->
	<!-- com.yunva.admin.admin.mapper; -->
	<!-- com.yunva.admin.sp.mapper; -->
	<!-- com.yunva.admin.cp.mapper -->
	<!--</bean> -->





	<!-- 配置事务传播特性 -->
	<!-- <tx:advice id="txAdvice" transaction-manager="paysdkdataTransactionManager"> -->
	<!-- <tx:attributes> -->
	<!-- <tx:method name="find*" propagation="SUPPORTS" read-only="true" /> -->
	<!-- <tx:method name="query*" propagation="SUPPORTS" read-only="true" /> -->
	<!-- <tx:method name="get*" propagation="SUPPORTS" read-only="true" /> -->
	<!-- <tx:method name="select*" propagation="SUPPORTS" read-only="true" /> -->
	<!-- <tx:method name="list*" propagation="SUPPORTS" read-only="true" /> -->
	<!-- <tx:method name="list*" propagation="SUPPORTS" read-only="true" /> -->
	<!-- <tx:method name="edit*" propagation="SUPPORTS" read-only="true" /> -->
	<!-- <tx:method name="update*" propagation="SUPPORTS" read-only="true" /> -->
	<!-- <tx:method name="save*" propagation="SUPPORTS" read-only="true" /> -->
	<!-- <tx:method name="add*" propagation="SUPPORTS" read-only="true" /> -->
	<!-- <tx:method name="insert*" propagation="SUPPORTS" read-only="true" /> -->
	<!-- <tx:method name="delete*" propagation="SUPPORTS" read-only="true" /> -->
	<!-- <tx:method name="*" propagation="REQUIRED" rollback-for="Exception" 
		/> -->
	<!-- </tx:attributes> -->
	<!-- </tx:advice> -->

	<!-- <aop:config proxy-target-class="true"> 事务管理 <aop:advisor pointcut="execution(* 
		com.yunva.pay..service.*.*(..))" advice-ref="txAdvice"/> </aop:config> -->
	<!-- <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer"> <property 
		name="sqlSessionFactoryBeanName" value="baseSqlSessionFactory" /> <property 
		name="basePackage" value="com.lin.mapper" /> </bean> -->
</beans>
